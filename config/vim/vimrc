
"------------------------------------------------------------
"                           OPTIONS
"------------------------------------------------------------

" set block cursor
set guicursor=""

" set special chars for trailing/leading spaces
set list
set listchars=lead:.,trail:-,tab:>-

" default vertical splits open to the right
set splitright
set splitbelow

" set relative and absolute line numbers
set nu rnu

" cursor is minimum of 8 lines from the edges of the screen
set scrolloff=8
set sidescrolloff=8

" don't wrap lines
set nowrap

" set tab width
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab

" auto indent new lines
set smartindent

" persistent undo history
set noswapfile
set nobackup
set undodir=$HOME/.cache/vim/undo/
set undofile

set viminfofile=$HOME/.cache/vim/viminfo

" show search matches as you type
set incsearch
set hlsearch

" case insensitive search unless uppercase is used
set ignorecase
set smartcase

" Misc appearance
set background=dark
set termguicolors
set conceallevel=2

colorscheme molokai

" sometimes setting these will fix colors
" let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
" let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

set nocompatible
filetype plugin indent on
syntax on


"------------------------------------------------------------
"                           REMAPS
"------------------------------------------------------------

let mapleader=" "

" oopsies
" cnoreabbrev W w

" help window in vertical split
cnoreabbrev h vert h

" Running terminal tasks asynchronously
cnoreabbrev term vert bo term ++shell

nnoremap <leader>pv :Ex<CR>

" Remove highlight
nnoremap <leader>v :noh<CR>

" Escape aliases
inoremap <C-c> <Esc>
inoremap jk <Esc>

"" Copy to system clipboard
vnoremap <leader>y "+y

" Center cursor after jumping half a page
nnoremap <C-d> <C-d>zz
nnoremap <C-u> <C-u>zz

" Quickfix
nnoremap g] :cnext<CR>
nnoremap g[ :cprev<CR>


"------------------------------------------------------------
"                           COMMANDS
"------------------------------------------------------------


"------------------------------------------------------------
"                           PLUGINS
"------------------------------------------------------------

" Auto download plugins on fresh install
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.config/vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
    silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin()

Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'

Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'mbbill/undotree'
Plug 'tpope/vim-surround'

Plug 'lervag/vimtex'

" Plug 'vimwiki/vimwiki'
" Plug 'sedm0784/vim-rainbow-trails'

call plug#end()

"" ------------------------ LSP -----------------------------

function! s:on_lsp_buffer_enabled() abort
    setlocal omnifunc=lsp#complete
    setlocal signcolumn=yes
    if exists('+tagfunc') | setlocal tagfunc=lsp#tagfunc | endif
    nmap <buffer> gd <plug>(lsp-definition)
    nmap <buffer> gi <plug>(lsp-implementation)
    nmap <buffer> gs <plug>(lsp-document-symbol-search)
    nmap <buffer> gS <plug>(lsp-workspace-symbol-search)
    nmap <buffer> gr <plug>(lsp-references)
    nmap <buffer> gR <plug>(lsp-rename)
    nmap <buffer> <leader>a <plug>(lsp-code-action)

    nmap <buffer> ]d <plug>(lsp-next-diagnostic)
    nmap <buffer> [d <plug>(lsp-previous-diagnostic)
    nmap <buffer> <leader>d <plug>(lsp-document-diagnostics)

    nmap <buffer> K <plug>(lsp-hover)
    nnoremap <buffer> <expr><c-f> lsp#scroll(+4)
    nnoremap <buffer> <expr><c-b> lsp#scroll(-4)

    let g:lsp_format_sync_timeout = 1000
    " autocmd! BufWritePre *.rs,*.go call execute('LspDocumentFormatSync')
endfunction


au!
" call s:on_lsp_buffer_enabled only for languages that has the server registered.
autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
augroup END

if executable('clangd')
    au User lsp_setup call lsp#register_server({
        \ 'name': 'clangd',
        \ 'cmd': {server_info->['clangd']},
        \ 'allowlist': ['cpp', 'c'],
        \ })
endif

let g:lsp_diagnostics_virtual_text_align = "after"
let g:lsp_diagnostics_echo_delay = 0
let g:lsp_diagnostics_float_delay = 0
let g:lsp_diagnostics_virtual_text_delay = 0
let g:lsp_diagnostics_highlights_delay = 0
let g:lsp_diagnostics_signs_delay = 0

let g:lsp_document_code_action_signs_delay = 0
let g:lsp_document_highlight_delay = 0

let g:lsp_semantic_enabled = 0

" colors get turned off for some reason
syntax on


"" ------------------------ Tools ---------------------------

" Termdebug
let g:termdebug_wide=1


" Fzf
nnoremap <leader>pf :Files<CR>
nnoremap <leader>pg :GFiles<CR>
nnoremap <leader>pp :Lines<CR>
nnoremap <leader>ps :RG<CR>


" Undo Tree
nnoremap <leader>u :UndotreeToggle<CR>


" Vimwiki
" let g:vimwiki_list = [{'path': '~/dox/wiki/', 'path_html': '~/dox/wiki/html'}]
" let g:vimwiki_key_mappings = { 'table_mappings': 0, }


" VimTex
let g:vimtex_compiler_latexmk = {
            \ 'executable': 'latexmk',
            \ 'options': [
            \   '-synctex=1',
            \   '-interaction=nonstopmode',
            \   '-file-line-error',
            \ ],
            \ 'out_dir': 'build',
            \ 'aux_dir': 'aux',
            \ }

let g:vimtex_view_method = 'zathura'
let g:vimtex_view_general_options = '-reuse-instance -forward-search -inverse-search @tex @line @pdf'
autocmd FileType tex setlocal spell


" UltiSnips
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"

